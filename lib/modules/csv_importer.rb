require 'csv'

module CsvImporter

  # This class reads and interates over the rows of uploaded csv files that contain
  # reports of captive or killed apes.
  # happy_accident is an unhappy name for an error generated in the CsvConverter due.
  # If a happy_accident is generated by any row in the csv file, none of the rows
  # are imported. 

  def self.import(csv_path)
    generate_reports_from_csv(csv_path)

    if any_report_has_an_error?
      { successful: false, happy_accidents: happy_accidents }
    else
      save_reports
      { successful: true, reports: reports }
    end
  end

  def self.generate_template
    CsvConverter.columns.join(",")
  end

  private

  def generate_reports_from_csv(csv_path)
    line = 1

    CSV.foreach(csv_path, headers: true, encoding: "ISO-8859-1") do |row|
      converter = CsvConverter.new(Report.new)
      add_row_data_to_report(row, report, line)
      line += 1
    end
  end

  def add_row_data_to_report(row, report, line)
    column = 1

    # Iterate over cells in the row and add their value to the Report.
    row.each do |header, value|
      begin
        converter.convert(header, value)
      rescue CsvConverter::CsvConversionError => e
        # "happy_accidents" only added when this error is raised.
        happy_accidents << {line: line, column: column, header: header, message: e.message}
      end

      column += 1
    end

    reports << converter.report if converter.has_data
  end

  def any_report_has_an_error?
    happy_accidents.any?
  end

  def save_reports
    ActiveRecord::Base.transaction { reports.each(&:save!) }
  end

  def reports
    []
  end

  def happy_accidents
    []
  end
end
